controller_frequency: 5.0
recovery_behaviour_enabled: true
planner_frequency: 5.0

# DEFAULT RECOVERY #
# controller_patience: 15.0
# planner_patience: 5.0
# oscillation_timeout: 0.0
# max_planning_retries: -1

# FORCE RECOVERY #
# oscillation_timeout: 30


NavfnROS:
   allow_unknown: true # Specifies whether or not to allow navfn to create plans that traverse unknown space.
   default_tolerance: 0.1 # A tolerance on the goal point for the planner.

GlobalPlanner:
  allow_unknown: true # Specifies whether or not to allow navfn to create plans that traverse unknown space.
  use_dijkstra: true
  use_quadratic: true
  use_grid_path: false
  old_navfn_behavior: false
  visualize_potential: true
  default_tolerance: 0.1 # A tolerance on the goal point for the planner.
  cost_factor: 0.55
  neutral_cost: 66
  lethal_cost: 253


TebLocalPlannerROS:

 odom_topic: odom
 map_frame: /map
    
 # Trajectory
  
 teb_autosize: True
 dt_ref: 0.3
 dt_hysteresis: 0.1
 global_plan_overwrite_orientation: True
 max_global_plan_lookahead_dist: 3.0
 feasibility_check_no_poses: 5
    
 # Robot
         
 max_vel_x: 0.4
 max_vel_x_backwards: 0.0
 max_vel_theta: 0.3
 acc_lim_x: 0.5
 acc_lim_theta: 0.5
 min_turning_radius: 0.5
 footprint_model: # types: "point", "circular", "two_circles", "line", "polygon"
   type: "polygon"
   radius: 0.2 # for type "circular"
   line_start: [-0.3, 0.0] # for type "line"
   line_end: [0.3, 0.0] # for type "line"
   front_offset: 0.2 # for type "two_circles"
   front_radius: 0.2 # for type "two_circles"
   rear_offset: 0.2 # for type "two_circles"
   rear_radius: 0.2 # for type "two_circles"
   vertices: [[0.4564, 0.172], [-0.2024,0.172], [-0.2024,-0.172], [0.4564,-0.172]] # for type "polygon"

 # GoalTolerance
    
 xy_goal_tolerance: 0.2
 yaw_goal_tolerance: 0.1
 free_goal_vel: False
    
 # Obstacles
    
 min_obstacle_dist: 0.1
 include_costmap_obstacles: True
 costmap_obstacles_behind_robot_dist: 1.0
 obstacle_poses_affected: 30
 costmap_converter_plugin: ""
 costmap_converter_spin_thread: True
 costmap_converter_rate: 5

 # Optimization
    
 no_inner_iterations: 5
 no_outer_iterations: 4
 optimization_activate: True
 optimization_verbose: False
 penalty_epsilon: 0.1
 weight_max_vel_x: 2
 weight_max_vel_theta: 1
 weight_acc_lim_x: 1
 weight_acc_lim_theta: 1
 weight_kinematics_nh: 1000
 weight_kinematics_forward_drive: 1
 weight_kinematics_turning_radius: 1
 weight_optimaltime: 1
 weight_obstacle: 50
 weight_dynamic_obstacle: 10 # not in use yet
 alternative_time_cost: False # not in use yet

 # Homotopy Class Planner

 enable_homotopy_class_planning: True
 enable_multithreading: True
 simple_exploration: False
 max_number_classes: 4
 roadmap_graph_no_samples: 15
 roadmap_graph_area_width: 5
 h_signature_prescaler: 0.5
 h_signature_threshold: 0.1
 obstacle_keypoint_offset: 0.1
 obstacle_heading_threshold: 0.45
 visualize_hc_graph: False
# TrajectoryPlannerROS:
#   # Robot Configuration Parameters
#   acc_lim_x: 1
#   acc_lim_theta:  1
#
#   max_vel_x: 0.3
#   min_vel_x: 0.1
#
#   max_vel_theta: 0.3
#   min_vel_theta: -0.3
#   min_in_place_vel_theta: 0.1
#
#   holonomic_robot: false
#   escape_vel: -0.1
#
#   # Goal Tolerance Parameters
#   yaw_goal_tolerance: 0.2
#   xy_goal_tolerance: 0.2
#   latch_xy_goal_tolerance: false
#
#   # Forward Simulation Parameters
#   sim_time: 2.0
#   sim_granularity: 0.02
#   angular_sim_granularity: 0.02
#   vx_samples: 6
#   vtheta_samples: 20
#   controller_frequency: 20.0
#
#   # Trajectory scoring parameters
#   meter_scoring: true # Whether the gdist_scale and pdist_scale parameters should assume that goal_distance and path_distance are expressed in units of meters or cells. Cells are assumed by default (false).
#   occdist_scale:  0.1 #The weighting for how much the controller should attempt to avoid obstacles. default 0.01
#   pdist_scale: 0.75  #     The weighting for how much the controller should stay close to the path it was given . default 0.6
#   gdist_scale: 1.0 #     The weighting for how much the controller should attempt to reach its local goal, also controls speed  default 0.8
#
#   heading_lookahead: 0.325  #How far to look ahead in meters when scoring different in-place-rotation trajectories
#   heading_scoring: false  #Whether to score based on the robot's heading to the path or its distance from the path. default false
#   heading_scoring_timestep: 0.8   #How far to look ahead in time in seconds along the simulated trajectory when using heading scoring (double, default: 0.8)
#   dwa: false   #Whether to use the Dynamic Window Approach (DWA)_ or whether to use Trajectory Rollout
#   simple_attractor: false
#   publish_cost_grid_pc: true
#
#   # Oscillation Prevention Parameters
#   oscillation_reset_dist: 0.25 #How far the robot must travel in meters before oscillation flags are reset (double, default: 0.05)
#   escape_reset_dist: 0.1
#   escape_reset_theta: 0.1

# DWAPlannerROS:
#   max_vel_x: 1.00
#   min_vel_x: 0.10

#   max_vel_y: 0.00
#   min_vel_y: 0.00

#   # Warning!
#   #   do not set min_trans_vel to 0.0 otherwise dwa will always think translational velocities
#   #   are non-negligible and small in place rotational velocities will be created.
#   max_vel_trans: 0.30 # choose slightly less than the base's capability
#   min_vel_trans: 0.001  # this is the min trans velocity when there is negligible rotational velocity
#   trans_stopped_vel: 0.01


#   max_vel_theta: 0.2  # choose slightly less than the base's capability
#   min_vel_theta: 0.1  # this is the min angular velocity when there is negligible translational velocity
#   theta_stopped_vel: 0.01

#   acc_lim_x: 1.0 # maximum is theoretically 2.0, but we
#   acc_lim_theta: 1.0
#   acc_lim_y: 0      # diff drive robot

# # Goal Tolerance Parameters
#   yaw_goal_tolerance: 0.2
#   xy_goal_tolerance: 0.15
#   latch_xy_goal_tolerance: true

# # Forward Simulation Parameters
#   sim_time: 2.0       # 1.7
#   vx_samples: 20       # 3
#   vy_samples: 0
#   vtheta_samples: 40  # 20

# # Trajectory Scoring Parameters
#   path_distance_bias: 32.0 #1.0 #32.0      # 32.0   - weighting for how much it should stick to the global path plan
#   goal_distance_bias: 24.0 #0.8 #24.0      # 24.0   - wighting for how much it should attempt to reach its goal
#   occdist_scale: 0.3 #0.3            # 0.01   - weighting for how much the controller should avoid obstacles
#   forward_point_distance: 0.325 # 0.325  - how far along to place an additional scoring point
#   stop_time_buffer: 0.2         # 0.2    - amount of time a robot must stop in before colliding for a valid traj.
#   scaling_speed: 0.25           # 0.25   - absolute velocity at which to start scaling the robot's footprint
#   max_scaling_factor: 0.2       # 0.2    - how much to scale the robot's footprint when at speed.

# # Oscillation Prevention Parameters
#   oscillation_reset_dist: 0.05  # 0.05   - how far to travel before resetting oscillation flags

# # Debugging
#   publish_traj_pc : true
#   publish_cost_grid_pc: true
#   global_frame_id: odom

# # Differential-drive robot configuration - necessary?
#   holonomic_robot: false
